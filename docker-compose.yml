version: '3.8'

services:
  polyglot-orchestrator:
    container_name: polyglot-orchestrator # Name the container
    build: . # Build from the Dockerfile in the current directory
    ports:
      - "8080:8080" # Map port 8080 on the host to port 8080 on the container
    restart: always # Restart the container if it shuts down
    networks:
      - apinet # Connect the container to the apinet network
    depends_on:
      - polyglot-authentication-db # Wait for the authentication database to start
    env_file:
      - .env
    healthcheck: # Healthcheck to make sure the container is running
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"] 
      interval: 30s # Check every 30 seconds
      timeout: 10s # Timeout after 10 seconds
      retries: 4 # Retry 4 times before marking unhealthy
    logging: # Logging configuration
      driver: json-file  # Log to JSON files
      options: 
        max-size: "200k" 
        max-file: "10"
    deploy: # Deployment configuration
      resources: 
        limits: # Limit the resources the container can use
          cpus: "0.5" # Use no more than 50% of a CPU
          memory: 50M # Use no more than 50MB of memory

  polyglot-authentication-db:
    image: postgres:16.1-alpine3.18 # Use the postgres image
    container_name: polyglot-authentication-db # Name the container
    restart: always # Restart the container if it shuts down
    env_file:
      - .env
    volumes: # Mount a volume to store the database data
      - ./data:/var/lib/postgresql/data
    networks:
      - apinet # Connect the container to the apinet network
    healthcheck: # Healthcheck to make sure the container is running
      test: ["CMD", "pg_isready", "-U", "postgres"] 
      interval: 30s # Check every 30 seconds
      timeout: 10s # Timeout after 10 seconds
      retries: 4 # Retry 4 times before marking unhealthy
    logging: # Logging configuration
      driver: json-file  # Log to JSON files
      options: 
        max-size: "200k" 
        max-file: "10"
    deploy: # Deployment configuration
      resources: 
        limits: # Limit the resources the container can use
          cpus: "0.3" # Use no more than 30% of a CPU
          memory: 30M # Use no more than 30MB of memory

# Define the apinet network that the container will connect to 
networks:
  apinet:
    driver: bridge

